/*The MIT License (MIT)

Copyright (c) 2015 Cory Beams

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.*/

function FontRenderer(e){this.gl,this.canvas=e,this.mvMatrix=mat4.create(),this.pMatrix=mat4.create(),this.currentProgram,this.shaderProgram,this.fontContext,this.texture,this.fontBuffer,this.textureFontBuffer,this.font="Arial",this.fontSize=16,this.textColour={r:0,g:0,b:0},this.initialized=false,this.init=function(){this.initGL();this.initShaders();this.initBuffers();this.prepareGL();this.initialized=true},this.initGL=function(){try{this.gl=this.canvas.getContext("webgl");this.gl.viewportWidth=e.width;this.gl.viewportHeight=e.height;this.gl.viewportRatio=e.width/e.height}catch(t){}if(!this.gl){alert("Could not initialise WebGL, sorry :-( ")}},this.initShaders=function(){var e=this.getShaderFromVar(this.gl,fontFragShader,"Frag");var t=this.getShaderFromVar(this.gl,fontVertShader,"Vert");this.shaderProgram=this.createShader(this.shaderProgram,true,t,e)},this.initBuffers=function(){this.fontBuffer=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.fontBuffer);var e=[1,1,0,0,1,0,1,0,0,0,0,0];this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(e),this.gl.STATIC_DRAW);this.fontBuffer.itemSize=3;this.fontBuffer.numItems=4;this.textureFontBuffer=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureFontBuffer);var t=[1,1,0,1,1,0,0,0];this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(t),this.gl.STATIC_DRAW);this.textureFontBuffer.itemSize=2;this.textureFontBuffer.numItems=4},this.prepareGL=function(){this.gl.clearColor(0,0,0,1);this.gl.viewport(0,0,this.gl.viewportWidth,this.gl.viewportHeight);mat4.ortho(this.pMatrix,-this.gl.viewportRatio,this.gl.viewportRatio,-1,1,.1,100);mat4.identity(this.mvMatrix);mat4.translate(this.mvMatrix,this.mvMatrix,[-this.gl.viewportRatio,-1,-1]);this.setCurrentShaderProgram(this.shaderProgram)},this.setMatrixUniforms=function(e){this.gl.uniformMatrix4fv(e.pMatrixUniform,false,this.pMatrix);this.gl.uniformMatrix4fv(e.mvMatrixUniform,false,this.mvMatrix)},this.clearCanvas=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)};this.setColour=function(e,t,n){this.textColour={r:e,g:t,b:n}},this.setFont=function(e){this.font=e},this.setFontSize=function(e){this.fontSize=e};this.drawString=function(e,t,n,r,i){this.setCurrentShaderProgram(this.shaderProgram);this.texture=this.createTextTexture(e,r,i);this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE);this.gl.enable(this.gl.BLEND);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.fontBuffer);this.gl.vertexAttribPointer(this.currentProgram.vertexPositionAttribute,this.fontBuffer.itemSize,this.gl.FLOAT,false,0,0);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureFontBuffer);this.gl.vertexAttribPointer(this.currentProgram.textureCoordAttribute,this.textureFontBuffer.itemSize,this.gl.FLOAT,false,0,0);this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);this.gl.uniform1i(this.currentProgram.samplerUniform,0);var s=this.gl.viewportHeight-n;mat4.translate(this.mvMatrix,this.mvMatrix,[this.convertToMatrix(t,true),this.convertToMatrix(s,false),0]);this.setMatrixUniforms(this.currentProgram);this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.fontBuffer.numItems);mat4.translate(this.mvMatrix,this.mvMatrix,[-this.convertToMatrix(t,true),-this.convertToMatrix(s,false),0])},this.setCurrentShaderProgram=function(e){this.gl.useProgram(e);this.currentProgram=e},this.convertToMatrix=function(e,t){if(t==true){return e/this.gl.viewportWidth*this.gl.viewportRatio*2}else{return e/this.gl.viewportHeight*2}},this.convertVertToMatrix=function(e,t){return verts={x:e/this.gl.viewportWidth*this.gl.viewportRatio*2,y:t/this.gl.viewportHeight*2}},this.getShaderFromHTML=function(e,t){var n=document.getElementById(t);if(!n){return null}var r="";var i=n.firstChild;while(i){if(i.nodeType==3)r+=i.textContent;i=i.nextSibling}var s;if(n.type=="x-shader/x-fragment"){s=this.gl.createShader(this.gl.FRAGMENT_SHADER)}else if(n.type=="x-shader/x-vertex"){s=this.gl.createShader(this.gl.VERTEX_SHADER)}else{return null}this.gl.shaderSource(s,r);this.gl.compileShader(s);if(!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS)){alert(this.gl.getShaderInfoLog(s));return null}return s},this.getShaderFromVar=function(e,t,n){var r;if(n=="Vert"||n=="Vertex"||n=="VertexShader"){r=this.gl.createShader(e.VERTEX_SHADER)}else if(n=="Frag"||n=="Fragment"||n=="FragmentShader"){r=this.gl.createShader(e.FRAGMENT_SHADER)}else{console.log("Error: Cannot get shader. Invalid type provided.");return}this.gl.shaderSource(r,t);this.gl.compileShader(r);if(!this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS)){alert(this.gl.getShaderInfoLog(r));return null}return r},this.createShader=function(e,t,n,r){e=this.gl.createProgram();this.gl.attachShader(e,n);this.gl.attachShader(e,r);this.gl.linkProgram(e);if(!this.gl.getProgramParameter(e,this.gl.LINK_STATUS)){alert("Could not initialise shader: "+e)}this.gl.useProgram(e);if(t==true){this.enableTextureShaderAttribs(e)}else{this.enableRegularShaderAttribs(e)}e.pMatrixUniform=this.gl.getUniformLocation(e,"uPMatrix");e.mvMatrixUniform=this.gl.getUniformLocation(e,"uMVMatrix");return e},this.enableTextureShaderAttribs=function(e){e.vertexPositionAttribute=this.gl.getAttribLocation(e,"aVertexPosition");this.gl.enableVertexAttribArray(e.vertexPositionAttribute);e.textureCoordAttribute=this.gl.getAttribLocation(e,"aTextureCoord");this.gl.enableVertexAttribArray(e.textureCoordAttribute)},this.createTextTexture=function(e,t,n){this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.fontBuffer);var r=[t/this.gl.viewportWidth*this.gl.viewportRatio*2,n/this.gl.viewportHeight*2,0,0,n/this.gl.viewportHeight*2,0,t/this.gl.viewportWidth*this.gl.viewportRatio*2,0,0,0,0,0];this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(r),this.gl.STATIC_DRAW);if(!this.fontContext){this.fontContext=document.createElement("canvas").getContext("2d")}var i=this.fontContext;i.canvas.width=t;i.canvas.height=n;i.fillStyle="rgb("+this.textColour.r+","+this.textColour.g+","+this.textColour.b+")";i.font=this.fontSize+"px "+this.font;i.fillText(e,0,this.fontSize);var s=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,s);this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,true);this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,i.canvas);this.gl.generateMipmap(this.gl.TEXTURE_2D);return s},this.updateViewport=function(){mat4.ortho(this.pMatrix,-this.gl.viewportRatio,this.gl.viewportRatio,-1,1,.1,100);mat4.identity(this.mvMatrix);mat4.translate(this.mvMatrix,this.mvMatrix,[-this.gl.viewportRatio,-1,-1])}}var fontVertShader="attribute vec3 aVertexPosition;"+"attribute vec2 aTextureCoord;"+"uniform mat4 uMVMatrix;"+"uniform mat4 uPMatrix;"+"varying vec2 vTextureCoord;"+"void main(void) {"+"gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);"+"vTextureCoord = aTextureCoord;"+"}";var fontFragShader="precision mediump float;"+"varying vec2 vTextureCoord;"+"uniform sampler2D uSampler;"+"void main(void) {"+"gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));"+"}"